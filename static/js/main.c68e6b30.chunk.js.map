{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c68e6b30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames'\n\n\n\n\nexport default function Cards({data:{confirmed,recovered,deaths,lastUpdate}}) {\n    if(!confirmed){\n        return ' Loading...'\n    }\n    return (\n        <div  className={styles.container}>\n       <Grid container spacing={3} justify=\"center\">\n           <Grid item component={Card} xs={12} md={3}className={cx(styles.card,styles.infected)}>\n              <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                  <Typography variant=\"h5\">\n                      <CountUp start={0} end={confirmed.value}duration={2.5}separator=\".\"/></Typography>\n                  <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                  <Typography variant=\"body2\">\n                      Number of active cases of COVID-19</Typography>\n              </CardContent>\n           </Grid>\n           <Grid item component={Card} xs={12} md={3}className={cx(styles.card,styles.recovered)}>\n              <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                  <Typography variant=\"h5\"> <CountUp start={0} end={recovered.value}duration={2.5}separator=\".\"/></Typography>\n                  <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                  <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n              </CardContent>\n           </Grid>\n           <Grid item component={Card} xs={12} md={3}className={cx(styles.card,styles.deaths)}>\n              <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                  <Typography variant=\"h5\"><CountUp start={0} end={deaths.value}duration={2.5}separator=\".\"/></Typography>\n                  <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                  <Typography variant=\"body2\">Number of deaths  caused by COVID-19</Typography>\n              </CardContent>\n           </Grid>\n\n       </Grid>\n\n        </div>\n        \n    )\n}\n","import axios from  \"axios\";\n\nconst url=\"https://covid19.mathdro.id/api\";\nexport const fetchData= async (country)=>{\n\n    let changeableUrl= url;\n\n        if(country){\n            changeableUrl=`${url}/countries/${country}`;\n\n        }\n   \n    try{\n  const {data:{confirmed,recovered,deaths,lastUpdate}}= await axios.get(changeableUrl);\n  \n  return{confirmed,recovered,deaths,lastUpdate }\n \n  \n      }catch (error){\n\n    }\n\n}\n\nexport const fetchDailyData=async(country)=>{;\n        \n    try{ const {data}= await axios.get(`${url}/daily`)\n    const modifiedData=data.map((dailyData)=>({\n        \n        confirmed:dailyData.confirmed.total,\n        deaths:dailyData.deaths.total,\n        date:dailyData.reportDate,\n        }\n    ));\n    return modifiedData;\n    } catch (error){\n\n    }\n}\n\nexport const fetchCountries= async () => {\ntry{ \n    const {data:{countries}}=await axios.get(`${url}/countries`)\n  return countries.map((country)=>country.name)\n}\n catch(error){\n     console.log(error)\n }\n}","import React ,{useState,useEffect} from 'react'\nimport {fetchDailyData} from \"../../api\";\nimport {Line,Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\n\n\nexport default function Chart({data:{confirmed,recovered,deaths},country}) {\n    const [dailyData,setDailyData]=useState([]);\n\n    useEffect(()=>{\n        const fetchAPI= async ()=>{\n            setDailyData(await fetchDailyData()) ;\n\n        }\n        fetchAPI();\n    },[]);\n    const lineChart=(\n        dailyData.length ?\n   (<Line \n    data={{\n       labels:dailyData.map(({date})=>date),\n       datasets:[{\n           data:dailyData.map(({confirmed})=>confirmed),\n           label:'Infected',\n           borderColor:'#3333ff',\n           fill:true,\n       },{\n        data:dailyData.map(({deaths})=>deaths),\n        label:'Deaths',\n        borderColor:'red',\n        backgroundColor:'rgba(255,0,0,0.5)',\n        fill:true,\n       }],}}\n   />):null\n    );\n    const barChart=(\n        confirmed\n        ? (\n            <Bar\n            data={{\n            labels:['Infected','Recovered','Deaths'],\n            datasets:[{\n                label:'People',\n                backgroundColor:['rgba(0,0,255,0.5)','rgba(0, 255, 0, 0.5)','rgba(255,0,0,0.5)'],\n                data:[confirmed.value,recovered.value,deaths.value]\n            }]\n            }}\n            options={{\n                legend:{display:false},\n                title:{display:true,text:`Current state in ${country}`}}}\n                />\n        ): null\n    )\n    \n    \n    return (\n        <div className={styles.container}>\n          {country? barChart:lineChart}\n        </div>)\n}\n","import React,{useState,useEffect} from 'react';\nimport {NativeSelect,FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api';\n\nexport default function CountryPicker({handleCountryChange}) {\n    const[fetchedCountries,setFetchedCountries]=useState([]);\n\n    useEffect(()=>{\n        const fetchAPI= async ()=>{\n         setFetchedCountries(await fetchCountries());\n        }; fetchAPI();\n    },[setFetchedCountries])\n    return (\n        <FormControl className={styles.formControl}>\n         <NativeSelect defaultValue='' onChange={(e)=>handleCountryChange(e.target.value)}> \n         <option value=\"\">Global</option>\n         {fetchedCountries.map((country,i)=><option key={i}value={country}>{country}</option>)}\n         </NativeSelect>\n        </FormControl>\n    )\n}\n\n\n","import React from 'react';\nimport Cards from './components/Cards/Cards';\nimport Chart from './components/Chart/Chart';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport styles from './App.module.css'\nimport {fetchData} from './api'\nimport './App.css';\nimport coronaImage from './images/covid.png';\nclass App extends React.Component {\n  state={\n    data:{},\n    country:'',\n  }\n  async componentDidMount(){\n\n    const fetchedData= await fetchData();\n    \n    this.setState({data:fetchedData})\n    \n   \n  }\n  handleCountryChange= async(country) => {\n    const fetchedData= await fetchData(country);\n    this.setState({data:fetchedData,country:country})\n  }\n  render(){\n    const {data,country}= this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"banner\"/>\n        <Cards  data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={country}/>\n        \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/covid.9ff4df2e.png\";"],"sourceRoot":""}